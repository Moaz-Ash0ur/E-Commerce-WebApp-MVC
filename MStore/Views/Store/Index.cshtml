@model IEnumerable<ProductDetailsVM>

@{
    ViewData["title"]= "Products";
}

@* Search *@
<h2 class="pb-3 mb-3 text-center text-primary">Products</h2>

<div class="row">

<div class="col m-3">

    @await Html.PartialAsync("_Search", (string)ViewBag.ValueSearch)

</div>

    <div class="col m-3">


    </div>

</div>

@* Product to show *@

<div class="container">

    <div id="products-container">
        @await Html.PartialAsync("_ProductBox", Model)
    </div>

     
       @* Pagination *@

       <nav class="mb-5">
            <ul class="pagination">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    string active = (i == ViewBag.PageNumber) ? "active" : "";
                    
                    <li class="page-item @active">
                    <a  class="page-link" href="#" onclick="Paginate(@i); return false;" data-page="@i">@i</a>
                   </li>
                }
        </ul>
        </nav>

    </div>


@section Scripts{

    <script>
        function Paginate(pageNumber){

            fetch(`/Store?pageNumber=${pageNumber}`,{
                method : 'Get',
                 headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(result => result.text())
               .then(htmlText => {

               document.getElementById('products-container').innerHTML = htmlText;


               document.querySelectorAll('.pagination .page-item').forEach(el => {
                 el.classList.remove('active');
               });

               const currentBtn = document.querySelector(`.pagination a[data-page='${pageNumber}']`);
               if (currentBtn) {
                 currentBtn.parentElement.classList.add('active');
               }




            }).catch(error => console.error("Error loading page:", error));

            
        }
    </script>

}










